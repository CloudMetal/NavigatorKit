
# NavigatorKit

Based on Three20 TTNavigator source and UXKit UXNavigator fork source, fully supports iOS 3.2 and 4.0 including iPad user interface idioms with either UISplitViewController or MGSplitViewController.

## Screenshots

[![](http://github.com/davidmorford/NavigationKit/Document/iPad.png)](http://github.com/davidmorford/NavigationKit/Document/iPad.png)
[![](http://github.com/davidmorford/NavigationKit/Document/iPhone.png)](http://github.com/davidmorford/NavigationKit/Document/iPhone.png)

## NavigatorKit Quick Start

1. Download or clone this repo.

2. Ensure you meet **Requirements** below. 

3. Open NavigatorCatalog.xcodeproj and Build. (See Note on Setting SDKROOT in Xcode Project below if simulator or device are missing in your build targets toolbar)

4. Run application.


## Making New NavigatorKit based Applications

1. Copy contents of 'Xcode/Project Templates/iOS to '~/Library/Application Support/Developer/Xcode/Project Templates/iOS'.

2. Create new Xcode application project by selecting 'NavigatorKit Universal Application' and creating the project in either the Applications or Catalogs directory of the BuildKit structure. Inside any first level folder of Projects is fine. Applications, Catalogs, Libraries are exemplars and Application projects only need to know the path the root Configurations folder and the root Build folder to reference finder librarys headers and link to static library archives.

3. Double check the SDKROOT.

4. Build and run. Viola.

5. Start making your new applcation with ease.



## Examples Applications


## Requirements

* Project (via BuildKit)
  * Xcode 3.2.4
  * SDK: iOS 4.1
  * Minimim Deployment Target SDK: 3.2
  * UIKit.framework weak linked.
  * LLVM/Clang 1.5
  * -Xclang -fobjc-nonfragile-abi2
  * -D__IPHONE_OS_VERSION_MIN_REQUIRED=030200

## Note on Setting SDKROOT in Xcode Project 

* No testing has been done with iOS 4.2 SDK as yet but in general, changing the include in Configurations/Platform-4.2.xcconfig and manually changing the SDKROOT value for each Xcode project at the **project** will get Simulator and Device configurations with appropriate Simulator deployment targets to show up. Whether by bug or design, Xcode began ignoring values set for SDKROOT at the project level, thus requiring this tedious task each time a new SDK is release. (Filed as http://openradar.appspot.com/8192536)

## History

### September 19, 2010
- Public release.
- New example applicatgion and feature catalog application. 
- New Xcode project templates and incorporated into latest BuildKit layout.

### August 15, 2010 (Internal)
- Remove view controller persistence. Let iOS handle it.
- Incorporate NKSplitViewPopoverButtonDelegate based on Malcolm Crawford's devforums.apple.com posts and Apple source code example.
- Toss out simplistic custom SplitViewController class in favour of kick-ass MGSplitViewController. Thanks Matt!

### June 2010 (Internal)
- Handle model presentation styles based on user interface idiom.
- Deal with iOS 4.0 and Xcode 3.2.4 *ignoring* SDK_ROOT set from .xcconfig on project root.

### March 2010 (Internal)
- Use UINavigationController subclass (Considered a "bad" thing but everyone seems to do it...)
- Remove garbage collection, use NSProxy pattern and remove ALL method swizzling.
- Branch from UXKit into seperate library, selected updates from latest Three20.



## License(s) and Copyright

NavigatorKit released under MIT license with caveats:

* In general, should follow the principle of the Apache Software License that Three20. Don't have time right now to consult a fraking lawyer but with update this section with links and pointers along with library documentation set and more example applications.
* MGSplitViewController which should follows Matt's license and copyrights in whole.
